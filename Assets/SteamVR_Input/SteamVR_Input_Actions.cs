//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_default_GrabGrip;
        
        private static SteamVR_Action_Pose p_default_Pose;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonLeftHand;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonRightHand;
        
        private static SteamVR_Action_Boolean p_default_SceneChange;
        
        private static SteamVR_Action_Boolean p_default_PinchGrip;
        
        private static SteamVR_Action_Boolean p_default_headsetonhead;
        
        private static SteamVR_Action_Vibration p_default_Haptic;
        
        private static SteamVR_Action_Boolean p_handPoseAssist_TrackpadTouch;
        
        private static SteamVR_Action_Boolean p_handPoseAssist_AButtonTouch;
        
        private static SteamVR_Action_Boolean p_handPoseAssist_BButtonTouch;
        
        private static SteamVR_Action_Boolean p_handPoseAssist_TriggerTouch;
        
        private static SteamVR_Action_Single p_handPoseAssist_TriggerPull;
        
        private static SteamVR_Action_Vector2 p_handPoseAssist_ThumbHorizontal;
        
        public static SteamVR_Action_Boolean default_GrabGrip
        {
            get
            {
                return SteamVR_Actions.p_default_GrabGrip.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose default_Pose
        {
            get
            {
                return SteamVR_Actions.p_default_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonLeftHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonLeftHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonRightHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonRightHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SceneChange
        {
            get
            {
                return SteamVR_Actions.p_default_SceneChange.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_PinchGrip
        {
            get
            {
                return SteamVR_Actions.p_default_PinchGrip.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_headsetonhead
        {
            get
            {
                return SteamVR_Actions.p_default_headsetonhead.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vibration default_Haptic
        {
            get
            {
                return SteamVR_Actions.p_default_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        public static SteamVR_Action_Boolean handPoseAssist_TrackpadTouch
        {
            get
            {
                return SteamVR_Actions.p_handPoseAssist_TrackpadTouch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean handPoseAssist_AButtonTouch
        {
            get
            {
                return SteamVR_Actions.p_handPoseAssist_AButtonTouch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean handPoseAssist_BButtonTouch
        {
            get
            {
                return SteamVR_Actions.p_handPoseAssist_BButtonTouch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean handPoseAssist_TriggerTouch
        {
            get
            {
                return SteamVR_Actions.p_handPoseAssist_TriggerTouch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Single handPoseAssist_TriggerPull
        {
            get
            {
                return SteamVR_Actions.p_handPoseAssist_TriggerPull.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Vector2 handPoseAssist_ThumbHorizontal
        {
            get
            {
                return SteamVR_Actions.p_handPoseAssist_ThumbHorizontal.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_SceneChange,
                    SteamVR_Actions.default_PinchGrip,
                    SteamVR_Actions.default_headsetonhead,
                    SteamVR_Actions.default_Haptic,
                    SteamVR_Actions.handPoseAssist_TrackpadTouch,
                    SteamVR_Actions.handPoseAssist_AButtonTouch,
                    SteamVR_Actions.handPoseAssist_BButtonTouch,
                    SteamVR_Actions.handPoseAssist_TriggerTouch,
                    SteamVR_Actions.handPoseAssist_TriggerPull,
                    SteamVR_Actions.handPoseAssist_ThumbHorizontal};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_SceneChange,
                    SteamVR_Actions.default_PinchGrip,
                    SteamVR_Actions.default_headsetonhead,
                    SteamVR_Actions.handPoseAssist_TrackpadTouch,
                    SteamVR_Actions.handPoseAssist_AButtonTouch,
                    SteamVR_Actions.handPoseAssist_BButtonTouch,
                    SteamVR_Actions.handPoseAssist_TriggerTouch,
                    SteamVR_Actions.handPoseAssist_TriggerPull,
                    SteamVR_Actions.handPoseAssist_ThumbHorizontal};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.default_Pose};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_SceneChange,
                    SteamVR_Actions.default_PinchGrip,
                    SteamVR_Actions.default_headsetonhead,
                    SteamVR_Actions.handPoseAssist_TrackpadTouch,
                    SteamVR_Actions.handPoseAssist_AButtonTouch,
                    SteamVR_Actions.handPoseAssist_BButtonTouch,
                    SteamVR_Actions.handPoseAssist_TriggerTouch};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[] {
                    SteamVR_Actions.handPoseAssist_TriggerPull};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[] {
                    SteamVR_Actions.handPoseAssist_ThumbHorizontal};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[] {
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand};
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_SceneChange,
                    SteamVR_Actions.default_PinchGrip,
                    SteamVR_Actions.default_headsetonhead,
                    SteamVR_Actions.handPoseAssist_TrackpadTouch,
                    SteamVR_Actions.handPoseAssist_AButtonTouch,
                    SteamVR_Actions.handPoseAssist_BButtonTouch,
                    SteamVR_Actions.handPoseAssist_TriggerTouch,
                    SteamVR_Actions.handPoseAssist_TriggerPull,
                    SteamVR_Actions.handPoseAssist_ThumbHorizontal};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_default_GrabGrip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/GrabGrip")));
            SteamVR_Actions.p_default_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/default/in/Pose")));
            SteamVR_Actions.p_default_SkeletonLeftHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonLeftHand")));
            SteamVR_Actions.p_default_SkeletonRightHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonRightHand")));
            SteamVR_Actions.p_default_SceneChange = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SceneChange")));
            SteamVR_Actions.p_default_PinchGrip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/PinchGrip")));
            SteamVR_Actions.p_default_headsetonhead = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/headsetonhead")));
            SteamVR_Actions.p_default_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/default/out/Haptic")));
            SteamVR_Actions.p_handPoseAssist_TrackpadTouch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/HandPoseAssist/in/TrackpadTouch")));
            SteamVR_Actions.p_handPoseAssist_AButtonTouch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/HandPoseAssist/in/AButtonTouch")));
            SteamVR_Actions.p_handPoseAssist_BButtonTouch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/HandPoseAssist/in/BButtonTouch")));
            SteamVR_Actions.p_handPoseAssist_TriggerTouch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/HandPoseAssist/in/TriggerTouch")));
            SteamVR_Actions.p_handPoseAssist_TriggerPull = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/HandPoseAssist/in/TriggerPull")));
            SteamVR_Actions.p_handPoseAssist_ThumbHorizontal = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/HandPoseAssist/in/ThumbHorizontal")));
        }
    }
}
